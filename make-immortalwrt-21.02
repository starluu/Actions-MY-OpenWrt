#!/bin/sh
#==========================================================

# config path
make_path="$(pwd)"
openwrt_dir="openwrt"
imagebuilder_path="${make_path}/${openwrt_dir}"

# config repo
imagebuilder_repo="https://downloads.immortalwrt.org/releases/21.02-SNAPSHOT/targets/x86/generic/immortalwrt-imagebuilder-21.02-SNAPSHOT-x86-generic.Linux-x86_64.tar.xz"
alist_repo=$(curl -s https://api.github.com/repos/sbwml/luci-app-alist/releases/latest | grep "browser_download_url.*openwrt-21.02-i386_pentium4.tar.gz" | cut -d '"' -f 4)
passwall_repo=$(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall/releases/latest | grep "browser_download_url.*luci-19.07.*.ipk" | cut -d '"' -f 4)

# config package
unused_packages="-luci-app-filetransfer"
driver_packages=""
default_luci="luci luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-compat luci-lib-base luci-lib-fs luci-lib-ipkg luci-i18n-argon-config-zh-cn"
my_packages="${default_luci} naiveproxy luci-i18n-aria2-zh-cn luci-i18n-samba4-zh-cn luci-i18n-diskman-zh-cn luci-i18n-turboacc-zh-cn kmod-fast-classifier kmod-shortcut-fe-cm ${driver_packages} ${unused_packages}"

error_msg() {
    echo -e "${ERROR} ${1}"
    exit 1
}

download_imagebuilder () {
    wget ${imagebuilder_repo} || error_msg
    tar -xJf immortalwrt-imagebuilder-* && rm -f immortalwrt-imagebuilder-*.tar.xz
    mv -f immortalwrt-imagebuilder-* ${openwrt_dir}
}

build_firmware () {
    cd ${imagebuilder_path}
    wget -P files/etc/uci-defaults https://github.com/starluu/Actions-MY-OpenWrt/raw/refs/heads/main/immortalwrt/99-custom.sh
    wget -P files/etc/opkg https://github.com/starluu/Actions-MY-OpenWrt/raw/refs/heads/main/immortalwrt/distfeeds.conf
    wget -P files/etc/passwall ${passwall_repo}
    wget -P files/etc/alist ${alist_repo}
    cd ./files/etc/alist
    tar -xvzf openwrt-21.02-i386_pentium4.tar.gz && rm -f openwrt-21.02-i386_pentium4.tar.gz
    cd ${imagebuilder_path}
    make image PROFILE="generic" PACKAGES="${my_packages}" FILES="files" || error_msg
    echo "success..."
}

download_imagebuilder
build_firmware

exit 0
