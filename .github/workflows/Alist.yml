name: Alist-AIO 自动化传输

on:
  workflow_dispatch:
    inputs:
      download_url:
        description: "🔗 要下载的文件URL (必须 http/https 开头)"
        required: true
        default: "https://example.com/demo-file.zip"
      cloud_path:
        description: "☁️ 天翼云保存路径 (如 /备份/2024/)"
        required: false
        default: "/自动备份/"
  schedule:
    - cron: '0 0 * * *'  # 每日UTC 0点自动运行

jobs:
  alist-automation:
    runs-on: ubuntu-latest
    steps:
    # ========== 第一阶段：容器初始化 ==========
    - name: 启动Alist-AIO容器
      run: |
        docker run -d --name alist-aio \
          -p 5244:5244 \
          -p 6800:6800 \
          -e PASSWORD=${{ secrets.ALIST_ADMIN_PW }} \
          -e ARIA2_SECRET=${{ secrets.ARIA2_TOKEN }} \
          xhofe/alist:latest-aio
        sleep 20  # 等待服务启动

    # ========== 第二阶段：输入验证 ==========
    - name: 验证输入参数
      run: |
        # 验证URL格式
        if [[ ! "${{ github.event.inputs.download_url }}" =~ ^https?:// ]]; then
          echo "❌ 错误：非法的URL格式，必须以 http:// 或 https:// 开头"
          exit 1
        fi

        # 标准化云端路径格式
        CLOUD_PATH="${{ github.event.inputs.cloud_path || '/自动备份/'}}"
        if [[ ! "$CLOUD_PATH" =~ /$ ]]; then
          CLOUD_PATH="${CLOUD_PATH}/"  # 确保路径以/结尾
        fi
        echo "CLOUD_PATH=${CLOUD_PATH}" >> $GITHUB_ENV

    # ========== 第三阶段：存储配置 ==========
    - name: 配置天翼云存储
      env:
        TIANYI_USER: ${{ secrets.TIANYI_USERNAME }}
        TIANYI_PASS: ${{ secrets.TIANYI_WEBDAV_PW }}
      run: |
        # 获取管理员Token
        docker exec -it alist-aio ./alist admin set ${{ secrets.ALIST_ADMIN_PW }}
        TOKEN=$(curl -s -X POST http://localhost:5244/api/auth/login \
          -H "Content-Type: application/json" \
          -d '{"username": "admin", "password": "'"${{ secrets.ALIST_ADMIN_PW }}"'"}' | jq -r .data.token)

        # 动态创建存储配置
        curl -X POST http://localhost:5244/api/admin/storage/create \
          -H "Authorization: $TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "mount_path": "/tianyi-cloud",
            "driver": "189Cloud",
            "username": "'"$TIANYI_USER"'",
            "password": "'"$TIANYI_PASS"'",
            "root_folder": "'"$CLOUD_PATH"'"
          }'

    # ========== 第四阶段：文件下载 ==========
    - name: 智能下载文件
      run: |
        # 提取文件名并处理特殊字符
        RAW_URL="${{ github.event.inputs.download_url }}"
        FILENAME=$(basename "${RAW_URL%%\?*}" | sed 's/%20/ /g')  # 去除URL参数并解码空格
        
        # 通过Aria2下载
        curl -s http://localhost:6800/jsonrpc \
          -H "Content-Type: application/json" \
          -d '{
            "jsonrpc": "2.0",
            "id": "github-action",
            "method": "aria2.addUri",
            "params": [
              "token:${{ secrets.ARIA2_TOKEN }}",
              ["'"$RAW_URL"'"],
              {
                "dir": "/opt/alist/data/downloads",
                "out": "'"$FILENAME"'",
                "split": "10",
                "max-connection-per-server": "8",
                "allow-overwrite": "true"
              }
            ]
          }'

        # 监控下载进度（最长等待6小时）
        timeout 6h bash -c '
          while true; do
            STATUS=$(curl -s http://localhost:6800/jsonrpc \
              -d "{\"jsonrpc\":\"2.0\",\"id\":\"1\",\"method\":\"aria2.tellActive\",\"params\":[\"token:${{ secrets.ARIA2_TOKEN }}\"]}")
            if [ $(echo "$STATUS" | jq ".result | length") -eq 0 ]; then
              break
            fi
            echo "⌛ 下载进度：$(echo "$STATUS" | jq ".result[0].completedLength")/$(echo "$STATUS" | jq ".result[0].totalLength")"
            sleep 30
          done
        ' || echo "⚠️ 警告：下载任务可能未完成"

    # ========== 第五阶段：文件上传 ==========
    - name: 安全上传到天翼云
      run: |
        FILENAME=$(basename "${{ github.event.inputs.download_url }}" | sed 's/%20/ /g')
        LOCAL_PATH="/opt/alist/data/downloads/$FILENAME"

        # 获取管理员Token
        TOKEN=$(curl -s -X POST http://localhost:5244/api/auth/login \
          -H "Content-Type: application/json" \
          -d '{"username": "admin", "password": "'"${{ secrets.ALIST_ADMIN_PW }}"'"}' | jq -r .data.token)

        # 分块上传（适合大文件）
        curl -X PUT http://localhost:5244/api/fs/form \
          -H "Authorization: $TOKEN" \
          -F "path=/tianyi-cloud/$FILENAME" \
          -F "file=@$LOCAL_PATH" \
          -F "chunk_index=0" \
          -F "chunk_count=1"

    # ========== 第六阶段：收尾工作 ==========
    - name: 清理和日志
      if: always()
      run: |
        # 获取容器日志
        docker logs alist-aio > alist.log 2>&1

        # 清理容器
        docker stop alist-aio || true
        docker rm alist-aio || true

        # 上传日志供调试
        echo "========== AList日志 =========="
        cat alist.log
