name: Alist-AIO 自动化传输

on:
  workflow_dispatch:
    inputs:
      download_url:
        description: "🔗 要下载的文件URL (必须 http/https 开头)"
        required: true
        default: "https://example.com/demo-file.zip"
      cloud_path:
        description: "☁️ 天翼云保存路径"
        required: false
        default: "[/ty](/离线下载)"
  schedule:
    - cron: '0 0 * * *'  # 每日UTC 0点自动运行

jobs:
  alist-automation:
    runs-on: ubuntu-latest
    steps:
    # ========== 初始阶段：内网穿透 ==========
    - name: 使用 cpolar 暴露端口Add commentMore actions
      run: |
        # 下载 cpolar
        wget https://www.cpolar.com/static/downloads/releases/3.3.18/cpolar-stable-linux-amd64.zip
        unzip cpolar-stable-linux-amd64.zip
        
        # 设置认证令牌（在 https://dashboard.cpolar.com 获取）
        ./cpolar authtoken ${{ secrets.CPOLAR_TOKEN }} 
        
        # 启动隧道
        ./cpolar http 9000 > /dev/null &
        
    - name: 启动portainer容器
      run: |
        docker run -d --restart=always --name="portainer" -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock 6053537/portainer-ce

    - name: 使用 Ngrok 暴露端口
      run: |
        # 下载 ngrok
        wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar xvzf ngrok-v3-stable-linux-amd64.tgz
    
        # 设置认证令牌（在 https://dashboard.ngrok.com 获取）
        ./ngrok authtoken ${{ secrets.NGROK_TOKEN }}
    
        # 启动隧道
        ./ngrok http 5244 > /dev/null &
    
        # 获取公共 URL
        sleep 3
        NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "ALIST_PUBLIC_URL=$NGROK_URL" >> $GITHUB_ENV
        echo "🌐 Alist 已暴露在公网: $NGROK_URL"
        
    # ========== 第一阶段：容器初始化 ==========
    - name: 启动Alist-AIO容器
      run: |
        docker run -d --name alist-aio \
          -p 5244:5244 \
          -p 6800:6800 \
          xhofe/alist:latest-aio
          docker exec alist-aio ./alist admin set admin
          echo "⏳ 等待手动配置天翼云存储..."
          echo "👉 预留6小时手动操作时间"
        sleep 6h

    # ========== 第二阶段：收尾工作 ==========
    - name: 清理和日志
      if: always()
      run: |
        # 获取容器日志
        docker logs alist-aio > alist.log 2>&1

        # 清理容器
        docker stop alist-aio || true
        docker rm alist-aio || true

        # 上传日志供调试
        echo "========== AList日志 =========="
        cat alist.log
